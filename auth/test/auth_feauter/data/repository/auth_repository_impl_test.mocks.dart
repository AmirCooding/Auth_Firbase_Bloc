// Mocks generated by Mockito 5.4.5 from annotations
// in auth/test/auth_feauter/data/repository/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:auth/auth_feauter/data/model/auth_model.dart' as _i5;
import 'package:auth/auth_feauter/data/remote/firbase_sarvice/firebase_auth_service.dart'
    as _i2;
import 'package:auth/auth_feauter/data/repository/auth_repository_impl.dart'
    as _i3;
import 'package:auth/auth_feauter/domain/entity/auth_enity.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseAuthService_0 extends _i1.SmartFake
    implements _i2.FirebaseAuthService {
  _FakeFirebaseAuthService_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepositoryImpl extends _i1.Mock
    implements _i3.AuthRepositoryImpl {
  MockAuthRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseAuthService get firebaseAuthService => (super.noSuchMethod(
        Invocation.getter(#firebaseAuthService),
        returnValue: _FakeFirebaseAuthService_0(
          this,
          Invocation.getter(#firebaseAuthService),
        ),
      ) as _i2.FirebaseAuthService);

  @override
  set firebaseAuthService(_i2.FirebaseAuthService? _firebaseAuthService) =>
      super.noSuchMethod(
        Invocation.setter(#firebaseAuthService, _firebaseAuthService),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<bool> isEmailAlreadyRegistered(String? email) =>
      (super.noSuchMethod(
        Invocation.method(#isEmailRegistered, [email]),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> signInWithEmailAndPassword(_i6.AuthEntity? auth) =>
      (super.noSuchMethod(
        Invocation.method(#signInWithEmailAndPassword, [auth]),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(#signOut, []),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signUpWithEmailAndPassword(_i6.AuthEntity? auth) =>
      (super.noSuchMethod(
        Invocation.method(#signUpWithEmailAndPassword, [auth]),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
